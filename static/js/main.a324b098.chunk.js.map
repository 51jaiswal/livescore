{"version":3,"sources":["logo.svg","Components/Navbar.js","Api/Api.js","img/vs_image.jpg","Components/MyCard.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","AppBar","position","Toolbar","IconButton","color","LiveTv","Typography","variant","style","float","edge","Switch","alignItems","onChange","dark","API_KEY","MyCard","match","useState","detail","setDetail","open","setOpen","handleClick","id","url","fetch","then","response","json","catch","err","console","log","getMatchesDetail","data","handleOpen","handleClose","Card","margin","className","CardContent","Grid","container","justify","spacing","item","width","height","src","vsimage","CardActions","intem","Button","onClick","unique_id","Date","dateTimeGMT","toLocaleString","Dialog","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autofocus","App","matches","setMatches","darkmode","setDarkmode","theme","createMuiTheme","palette","type","useEffect","res","getMatches","alert","ThemeProvider","Paper","e","md","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a324b098.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { AppBar, IconButton, Switch, Toolbar, Typography } from \"@material-ui/core\"\r\nimport { LiveTv } from \"@material-ui/icons\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport react, {Component} from \"react\"\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nconst Navbar=(props)=>{\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\">\r\n                    {/* <MenuIcon/> */}\r\n                    <LiveTv/>\r\n                  \r\n                </IconButton>\r\n                <Typography variant=\"h6\">Live Score</Typography>   \r\n               <IconButton style={{float:\"right\"}} color=\"black\" edge=\"end\">\r\n                    <Switch alignItems=\"end\" onChange={props.dark} ></Switch>\r\n               </IconButton>\r\n               \r\n    \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Navbar","const API_KEY=\"eGqyCxMQPVhK5SVopwjXs1xJ28Z2\"\r\n\r\nexport const getMatches=()=>{\r\n    const url=`https://cricapi.com/api/matches/?apikey=${API_KEY}`\r\n    return (fetch(url)\r\n    .then((res)=>res.json())\r\n    .catch((err)=>console.log(\"Error : \",err)))\r\n}\r\n\r\nexport const getMatchesDetail=(id)=>{\r\n    const url = `https://cricapi.com/api/cricketScore/?apikey=${API_KEY}&unique_id=${id}`\r\n    return fetch(url)\r\n    .then(response=>response.json())\r\n    .catch(err=>console.log(err))\r\n}","export default __webpack_public_path__ + \"static/media/vs_image.ac11c1a3.jpg\";","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { palette } from '@material-ui/system';\r\nimport react, { Component, Fragment, useState } from \"react\";\r\nimport { getMatchesDetail } from \"../Api/Api\";\r\nimport vsimage from \"../img/vs_image.jpg\";\r\nimport \"../card.css\"\r\nconst MyCard = ({ match }) => {\r\n  const [detail, setDetail] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const handleClick = (id) => {\r\n    getMatchesDetail(id)\r\n      .then((data) => {\r\n        setDetail(data);\r\n          handleOpen();\r\n        console.log(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  \r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const getMatchCart = () => {\r\n    return (    \r\n      <Card  style={{ margin: \"20px\" }}><div className=\"card\">\r\n        <CardContent>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n            <Grid item>\r\n              <Typography color=\"primary\" variant=\"h5\">{match[\"team-1\"]}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <img style={{ width: \"90px\", height: \"160px\" }} src={vsimage} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography color=\"primary\" variant=\"h5\">{match[\"team-2\"]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid intem container justify=\"center\" spacing={3}>\r\n            <Button\r\n              onClick={() => {\r\n                handleClick(match.unique_id);\r\n              }}\r\n              style={{ margin: \"20px\" }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Show Detail\r\n            </Button>\r\n            <Button\r\n              style={{ margin: \"20px\" }}\r\n              item\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Start Time {new Date(match.dateTimeGMT).toLocaleString()}\r\n            </Button>\r\n          </Grid>\r\n        </CardActions></div>\r\n      </Card>\r\n    );\r\n  };\r\n  const getDialog = () => {\r\n    return(<Dialog open={open} >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Match Detail..\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <Typography>{detail.stat}</Typography>\r\n          <Typography>\r\n            Match{\" \"}\r\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n              {detail.matchStarted ? \"Started\" : \"Still not Started\"}\r\n            </span>\r\n          </Typography>\r\n          <Typography>\r\n            Score{\" \"}\r\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n              {detail.score}\r\n            </span>\r\n          </Typography>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autofocus>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n    )};\r\n  return (\r\n    <Fragment>\r\n      {getMatchCart()}\r\n      {getDialog()}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default MyCard;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, Grid, Paper, Typography } from \"@material-ui/core\";\nimport Navbar from \"./Components/Navbar\";\nimport MyCard from \"./Components/MyCard\";\nimport { getMatches } from \"./Api/Api\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\n\nfunction App() {\n  const [matches, setMatches] = useState([]);\n  const [darkmode,setDarkmode] = useState(false)\n\n  const theme = createMuiTheme({\n    palette: {\n      type:darkmode? \"dark\":\"light\",\n    },\n  });\n  useEffect(() => {\n    {\n      getMatches()\n        .then((data) => setMatches(data.matches))\n        .catch((err) => alert(\"couldn't load data\"));\n    }\n  }, []);\n\n  const dark = (e)=>{\n    console.log(darkmode)\n    setDarkmode(!darkmode)\n  }\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Paper>      \n        <Navbar dark={dark} />\n        <Typography variant=\"h4\" style={{ margin: \"20px\" }}>\n          Welcome to My live score App\n        </Typography>\n\n        <Grid container>\n          <Grid md=\"2\"></Grid>\n          <Grid md=\"8\">\n            {matches.map((match) => (\n              <Fragment key={match.unique_id}>\n                {match.type == \"Twenty20\" ? (\n                  <MyCard key={match.unique_id} match={match} />\n                ) : (\n                  \"\"\n                )}\n              </Fragment>\n            ))}\n          </Grid>\n        </Grid></Paper>\n      </ThemeProvider>\n\n      {/* <Button variant=\"contained\" color=\"outlined\">Click</Button> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}