{"version":3,"sources":["logo.svg","Components/Navbar.js","Api/Api.js","img/vs_image.jpg","Components/MyCard.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","IconButton","color","Typography","variant","API_KEY","MyCard","match","useState","detail","setDetail","open","setOpen","handleClick","id","url","fetch","then","response","json","catch","err","console","log","getMatchesDetail","data","handleOpen","handleClose","Card","style","margin","className","CardContent","Grid","container","justify","alignItems","spacing","item","width","height","src","vsimage","CardActions","intem","Button","onClick","unique_id","Date","dateTimeGMT","toLocaleString","Dialog","DialogTitle","DialogContent","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autofocus","App","matches","setMatches","useEffect","res","getMatches","alert","styele","md","map","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b37ecc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport react, {Component} from \"react\"\r\n\r\nconst Navbar=()=>{\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\">\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\">Live Score</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Navbar","const API_KEY=\"eGqyCxMQPVhK5SVopwjXs1xJ28Z2\"\r\n\r\nexport const getMatches=()=>{\r\n    const url=`https://cricapi.com/api/matches/?apikey=${API_KEY}`\r\n    return fetch(url)\r\n    .then((res)=>res.json())\r\n    .catch((err)=>console.log(\"Error : \",err))\r\n}\r\n\r\nexport const getMatchesDetail=(id)=>{\r\n    const url = `https://cricapi.com/api/cricketScore/?apikey=${API_KEY}&unique_id=${id}`\r\n    return fetch(url)\r\n    .then(response=>response.json())\r\n    .catch(err=>console.log(err))\r\n}","export default __webpack_public_path__ + \"static/media/vs_image.ac11c1a3.jpg\";","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport react, { Component, Fragment, useState } from \"react\";\r\nimport { getMatchesDetail } from \"../Api/Api\";\r\nimport vsimage from \"../img/vs_image.jpg\";\r\nimport \"../card.css\"\r\nconst MyCard = ({ match }) => {\r\n  const [detail, setDetail] = useState({});\r\n  const [open, setOpen] = useState(false);\r\n  const handleClick = (id) => {\r\n    getMatchesDetail(id)\r\n      .then((data) => {\r\n        setDetail(data);\r\n          handleOpen();\r\n        console.log(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  \r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const getMatchCart = () => {\r\n    return (\r\n        \r\n\r\n        \r\n      <Card  style={{ margin: \"20px\" }}><div className=\"card\">\r\n        <CardContent>\r\n          <Grid container justify=\"center\" alignItems=\"center\" spacing={4}>\r\n            <Grid item>\r\n              <Typography color=\"primary\" variant=\"h5\">{match[\"team-1\"]}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <img style={{ width: \"90px\", height: \"160px\" }} src={vsimage} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography color=\"primary\" variant=\"h5\">{match[\"team-2\"]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Grid intem container justify=\"center\" spacing={3}>\r\n            <Button\r\n              onClick={() => {\r\n                handleClick(match.unique_id);\r\n              }}\r\n              style={{ margin: \"5px\" }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Show Detail\r\n            </Button>\r\n            <Button\r\n              style={{ margin: \"5px\" }}\r\n              item\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Start Time {new Date(match.dateTimeGMT).toLocaleString()}\r\n            </Button>\r\n          </Grid>\r\n        </CardActions></div>\r\n      </Card>\r\n    );\r\n  };\r\n  const getDialog = () => {\r\n    return(<Dialog open={open} >\r\n      <DialogTitle id=\"alert-dialog-title\">{\"Match Detail..\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <Typography>{detail.stat}</Typography>\r\n          <Typography>\r\n            Match{\" \"}\r\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n              {detail.matchStarted ? \"Started\" : \"Still not Started\"}\r\n            </span>\r\n          </Typography>\r\n          <Typography>\r\n            Score{\" \"}\r\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\r\n              {detail.score}\r\n            </span>\r\n          </Typography>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autofocus>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n    )};\r\n  return (\r\n    <Fragment>\r\n      {getMatchCart()}\r\n      {getDialog()}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default MyCard;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React,{Fragment,useEffect,useState} from \"react\"\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport Navbar from \"./Components/Navbar\"\nimport MyCard from './Components/MyCard';\nimport {getMatches} from \"./Api/Api\"\nfunction App() {\n\n  const [matches,setMatches] = useState([]);\n  useEffect(() => {\n    {getMatches().then((data)=>setMatches(data.matches))\n    .catch(err=>alert(\"couldn't load data\"))}\n  }, [])\n  return (\n    \n    <div className=\"App\">\n      <Navbar/>\n      <Typography variant=\"h4\" styele={{margin:\"20px\"}}>Welcome to My live score App</Typography>\n        \n      <Grid container>\n        <Grid  md=\"2\"></Grid>\n        <Grid  md=\"8\">\n           {\n          matches.map((match)=>(\n            <Fragment key={match.unique_id}>\n              {\n                match.type==\"Twenty20\" ?( <MyCard key={match.unique_id} match={match}/>):\"\"\n              }\n            </Fragment>\n          \n          ))\n        }\n        </Grid>\n      </Grid>\n       \n        \n        {/* <Button variant=\"contained\" color=\"outlined\">Click</Button> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}